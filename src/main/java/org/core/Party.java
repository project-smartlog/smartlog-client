/*
 * DBE Core Complete API
 * Complete DBE Core API with all the defined API operations. Different API operations are also provided based on DBE Core roles as separate APIs.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kari.korpela@lut.fi
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.core;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Party information
 */
@ApiModel(description = "Party information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-05T15:39:37.700+02:00")
public class Party {
  @SerializedName("PartyIdentification")
  private String partyIdentification = null;

  @SerializedName("PartyName")
  private String partyName = null;

  @SerializedName("PartyLegalEntity")
  private String partyLegalEntity = null;

  @SerializedName("Contact")
  private Contact contact = null;

  public Party partyIdentification(String partyIdentification) {
    this.partyIdentification = partyIdentification;
    return this;
  }

   /**
   * Get partyIdentification
   * @return partyIdentification
  **/
  @ApiModelProperty(example = "PartyID123", value = "")
  public String getPartyIdentification() {
    return partyIdentification;
  }

  public void setPartyIdentification(String partyIdentification) {
    this.partyIdentification = partyIdentification;
  }

  public Party partyName(String partyName) {
    this.partyName = partyName;
    return this;
  }

   /**
   * Get partyName
   * @return partyName
  **/
  @ApiModelProperty(example = "Ostaja/Myyja Oy", value = "")
  public String getPartyName() {
    return partyName;
  }

  public void setPartyName(String partyName) {
    this.partyName = partyName;
  }

  public Party partyLegalEntity(String partyLegalEntity) {
    this.partyLegalEntity = partyLegalEntity;
    return this;
  }

   /**
   * Get partyLegalEntity
   * @return partyLegalEntity
  **/
  @ApiModelProperty(example = "Corporate", value = "")
  public String getPartyLegalEntity() {
    return partyLegalEntity;
  }

  public void setPartyLegalEntity(String partyLegalEntity) {
    this.partyLegalEntity = partyLegalEntity;
  }

  public Party contact(Contact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @ApiModelProperty(value = "")
  public Contact getContact() {
    return contact;
  }

  public void setContact(Contact contact) {
    this.contact = contact;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Party party = (Party) o;
    return Objects.equals(this.partyIdentification, party.partyIdentification) &&
        Objects.equals(this.partyName, party.partyName) &&
        Objects.equals(this.partyLegalEntity, party.partyLegalEntity) &&
        Objects.equals(this.contact, party.contact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partyIdentification, partyName, partyLegalEntity, contact);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Party {\n");
    
    sb.append("    partyIdentification: ").append(toIndentedString(partyIdentification)).append("\n");
    sb.append("    partyName: ").append(toIndentedString(partyName)).append("\n");
    sb.append("    partyLegalEntity: ").append(toIndentedString(partyLegalEntity)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

